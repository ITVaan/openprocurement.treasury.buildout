[circus]
check_delay = 5
endpoint = ${options['endpoint']}
pubsub_endpoint = ${options['pubsub_endpoint']}
umask = 002
logoutput = ${parts.buildout.directory}/var/log/circus.log
{% if 'httpd' in options and options['httpd'] %}
httpd = 1
httpd_host = ${options['httpd_host']}
httpd_port = ${options['httpd_port']}
{% end %}
statsd = ${options['statsd']}


{% if options['integrations_treasury'] %}
[watcher:integrations_treasury]
shell = True
copy_env = True
stdout_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/integrations_treasury.stdout.log
stdout_stream.max_bytes = 134217728
stdout_stream.backup_count = 1
stderr_stream.class = FileStream
stderr_stream.filename = ${parts.buildout.directory}/var/log/integrations_treasury.stderr.log
stderr_stream.max_bytes = 134217728
stderr_stream.backup_count = 1

[watcher:integrations_treasury_webapp]
cmd = ${parts.buildout.directory}/bin/chaussette --fd $(circus.sockets.integrations_treasury_web) --backend=gevent paste:${parts['openprocurement.integrations.treasury.ini'].output} --graceful-timeout=${options['graceful_timeout'] if 'graceful_timeout' in options else '60'}
numprocesses = ${options['numprocesses'] if 'numprocesses' in options else '1'}
use_sockets = True
priority = 90
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/integrations_treasury_api.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/integrations_treasury_api.stderr.log

[socket:integrations_treasury_web]
host = ${options['api_host']}
port = ${options['api_port']}

[plugin:integrations_treasury_webapp_resource]
use = circus.plugins.resource_watcher.ResourceWatcher
watcher = webapp
max_cpu = 95
max_mem = 400M
{% end %}
